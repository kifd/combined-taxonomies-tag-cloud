.widget_tag_cloud {

	.combinedtagcloud {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0; padding: 0;
		
		li {
			margin: 0; padding: 0; border: 0; background-color: transparent;
			max-width: 100%;
			
			// NOTE: default look for browsers that don't support CSS vars is approx the standard WP 2016 tag cloud
			a {
				display: block;
				width: auto;
				
				line-height: 1;
				margin: 0; padding: 0.5em 1em;
				
				word-wrap: break-word;
				white-space: break-spaces;
				outline: 0;
				
				border: 1px solid #d1d1d1;
				border-radius: 2px;
				background-color: transparent;
				color: #007acc;
				font-size: 1em;
				
				&:hover {
					border-color: #007acc;
				}
			}
		}
		
		&.left {
			justify-content: left;
		}
		&.center {
			justify-content: center;
		}
		&.right {
			justify-content: right;
		}
		&.top li {
			align-self: start;
		}
		&.middle li {
			align-self: center;
		}
		&.bottom li {
			align-self: end;
		}
		
		a {
			&.smaller {
				letter-spacing: 0;
			}
			&.larger {
				
			}
			
			&.lower {
				text-transform: lowercase;
			}
			&.upper {
				text-transform: uppercase;
			}
			
			&.no_text_deco,
			&.under_hover,
			&.box_hover {
				text-decoration: none;
			}
			&.under_hover:hover {
				text-decoration: underline;
			}
			&.box_hover:hover {
				box-shadow: inset 0 0 0 rgba(0,0,0,0), 0 3px 0 rgba(0,0,0, 1);
			}
			&.under_always {
				text-decoration: underline;
			}
		}
	}
}



@supports (--css: variables) {
	.widget_tag_cloud {

		.widget-title {
			
		}
		
		.combinedtagcloud {
			
			li {
				
				a {
					padding: var(--linkPaddingX, 0.5em) var(--linkPaddingX, 1em);
					
					word-wrap: break-word;
					white-space: break-spaces;
					
					border: var(--borderWidth, 0) var(--borderStyle, solid) var(--borderColor, transparent);
					
					background-color: var(--backColor);
					color: var(--textColor);
					
					transition: all 0.2s ease-in-out;

					border-radius: var(--borderRadius, 0.1em);
					font-size: var(--linkBaseSize, 1em);
					
					&:hover {
						background-color: var(--backColor);
						color: var(--textColor);
						border-color: var(--borderColor, transparent);
					}
				}
			}
			
			
			a {
				
				&.fx_invert {
					&.highlight, &:hover {
						background-color: var(--textColor);
						color: var(--backColor);
					}
				}
				
				&.fx_backg_up { // https://codepen.io/geoffgraham/pen/GXoOdK
					background: linear-gradient(to bottom, var(--backColor) 0%, var(--backColor) 100%);
					background-position: 0 100%;
					background-repeat: repeat-x;
					background-size: 1% 8%;
					//transition: background-size .2s, color .2s;
					
					&.highlight, &:hover {
						background-size: 1% 100%;
						color: var(--textOnBackColor);
						border-color: var(--borderColor);
					}
				}
				
				
				
				
				
				
				
				
				
				
				
				&.effect1:hover {
					background-image: linear-gradient(to right, #ff8a00, #e52e71);
					background-clip: border-box;
					-webkit-background-clip: text;
					-webkit-text-fill-color: transparent;
					-webkit-box-decoration-break: clone;
					box-decoration-break: clone;
					text-shadow: none;
				}
				// NOTE: not suitable for small size text like tags...
				&.effect3 { // https://codepen.io/geoffgraham/pen/gdPpyE
					color: var(--backColor);
					text-decoration: none;
					&:hover {
						color: transparent;
						-webkit-text-stroke: 2px var(--backColor);
					}
				}
			}
			
		}
	}
}


@supports not(-webkit-text-stroke: 2px red) {
	a.effect3 {
		text-shadow:
			3px 3px 0 var(--backColor),
			-1px -1px 0 var(--backColor),
			1px -1px 0 var(--backColor),
			-1px 1px 0 var(--backColor),
			1px 1px 0 var(--backColor);
	}
}
