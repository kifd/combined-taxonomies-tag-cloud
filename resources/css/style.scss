.widget {

	.combined-taxonomies-tag-cloud {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0; padding: 0;
		
		justify-content: left;
		
		li {
			margin: 0; padding: 0; border: 0; background-color: transparent;
			max-width: 100%;
			align-self: start;
		}
		
		// NOTE: default look for browsers that don't support CSS vars is approx
		//       the standard WP 2016 tag cloud, no extra frills
		a:not([class^='iris-']) {
			display: block;
			width: auto;
			
			line-height: 1;
			margin: 0; padding: 0.5em 1em;
			
			word-wrap: break-word;
			white-space: break-spaces;
			outline: 0;
			
			border: 1px solid #d1d1d1;
			border-radius: 2px;
			background-color: transparent;
			color: #007acc;
			font-size: 1em;
			
			&:hover {
				border-color: #007acc;
			}
		}
		
		
		a {
			&.smaller {
				letter-spacing: 0;
			}
			&.larger {
				
			}
			
			&.lower {
				text-transform: lowercase;
			}
			&.upper {
				text-transform: uppercase;
			}
			
			&.no_text_deco,
			&.under_hover,
			&.box_hover {
				text-decoration: none;
			}
			&.under_hover:hover {
				text-decoration: underline;
			}
			&.box_hover:hover {
				box-shadow: inset 0 0 0 rgba(0,0,0,0), 0 3px 0 rgba(0,0,0, 1);
			}
			&.under_always,
			&.under_dotted {
				text-decoration: underline;
			}
			&.under_dotted:hover {
				text-decoration: dotted;
			}
		}
	}
}



@supports (--css: variables) {
	.widget {
		
		// front end
		&.widget_tag_cloud {
			background-color: var(--widgetBackgroundColor, transparent);
			padding: var(--widgetPadding, 0);
			border-radius: var(--widgetBorderRadius, 0);
			font-size: var(--widgetFontSize, 1em);
			
			.widget-title {
				color: var(--titleColor, #000000);
				text-align: var(--titleAlignment, left);
				font-family: var(--fontFamily, inherit);
			}
			
			.combined-taxonomies-tag-cloud {
				column-gap: var(--columnGap, 0.5em);
				row-gap: var(--rowGap, 0.5em);
				justify-content: var(--alignHorizontal, left);
				li {
					align-self: var(--alignVertical, start);
				}
			}
		}
		
		
		// both front and back from here on
		.combined-taxonomies-tag-cloud {
			
			a:not([class^='iris-']) {
				position: relative;
				
				margin: 0;
				padding: var(--linkPaddingY, 0.5em) var(--linkPaddingX, 1em);
				
				word-wrap: break-word;
				white-space: break-spaces;
				overflow: hidden;
				
				border: var(--borderWidth, 0) var(--borderStyle, solid) var(--borderColor1, transparent);
				
				background-color: var(--backColor1, transparent);
				color: var(--textColor1, #000000);
				
				transition: color 0.3s, background-color 0.3s;
				
				transform: scale(1) rotate(0);

				border-radius: var(--borderRadius, 0.1em);
				
				font-family: var(--fontFamily, inherit);
				font-size: var(--linkBaseSize, 1em);
				
				&.highlight, &:hover {
					background-color: var(--backColor2, transparent);
					color: var(--textColor2, #000000);
					border-color: var(--borderColor2, transparent);
				}
				
				&:before, &:after {
					position: absolute;
					content: '';
					border-radius: var(--borderRadius, 0.1em);
					z-index: -1;
					top: 0; bottom: 0; left: 0; right: 0;
					transition: all 0.3s ease-out;
				}
				
				&:after {
					z-index: 0;
				}
				
				
				// NOTE: all fx_ adapted from https://ianlunn.github.io/Hover/ under the Open Source MIT License
				//       any bugs introduced in the adaption are 99.99% likely to be mine :)
				
				
				// 2d transforms -------------------------------------------------------------------------------------------------------
				
				&.fx_2d_grow {
					&.highlight, &:hover {
						transform: scale(1.1);
					}
				}
				
				&.fx_2d_shrink {
					&.highlight, &:hover {
						transform: scale(0.9);
					}
				}
				
				&.fx_2d_rotate {
					&.highlight, &:hover {
						transform: rotate(4deg);
					}
				}
				
				&.fx_2d_grow_rotate {
					&.highlight, &:hover {
						transform: scale(1.1) rotate(4deg);
					}
				}
				
				&.fx_2d_skew {
					&.highlight, &:hover {
						transform: skew(-10deg);
					}
				}
				
				
				// backgrounds ---------------------------------------------------------------------------------------------------------
				
				&.fx_bg_static {
					&.highlight, &:hover {
						background-color: var(--backColor1);
						color: var(--textColor1);
					}
				}
				
				
				&.fx_bg_sweep_up,
				&.fx_bg_sweep_down,
				&.fx_bg_sweep_left,
				&.fx_bg_sweep_right {
					transform: perspective(1px) translateZ(0);
					
					&:before {
						background-color: var(--backColor2);
						transform: scaleY(0);
						transform-origin: 50% 100%;
					}
					
					&.highlight, &:hover {
						background-color: var(--backColor1);
						color: var(--textColor2);
						&:before {
							transform: scaleY(1);
						}
					}
				}
				&.fx_bg_sweep_down:before {
					transform-origin: 50% 0%;
				}
				
				&.fx_bg_sweep_left,
				&.fx_bg_sweep_right {
					&:before {
						transform-origin: 100% 50%;
						transform: scaleX(0);
					}
					&.highlight, &:hover {
						&:before {
							transform: scaleX(1);
						}
					}
				}
				&.fx_bg_sweep_right:before {
					transform-origin: 0% 50%;
				}
				
				
				&.fx_bg_radial_in,
				&.fx_bg_radial_out {
					transform: perspective(1px) translateZ(0);
					
					&:before {
						background-color: var(--backColor2);
						border-radius: 100%;
						transform: scale(0);
					}
					&.highlight, &:hover {
						&:before {
							transform: scale(2);
						}
					}
				}
				
				
				&.fx_bg_radial_in {
					background-color: var(--backColor2);
					
					&:before {
						background-color: var(--backColor1);
						transform: scale(2);
					}
					&.highlight, &:hover {
						&:before {
							transform: scale(0);
						}
					}
				}
				
				&.fx_bg_underline_center_out,
				&.fx_bg_overline_center_out,
				&.fx_bg_bothline_center_out {
					background-color: var(--backColor1);
					
					&:before {
						background-color: var(--backColor2);
						
						left: 51%; right: 51%;
						top: unset; bottom: 0; height: 15%;
					}
					&.highlight, &:hover {
						color: var(--textColor1);
						&:before {
							left: 0; right: 0;
						}
					}
				}
				
				&.fx_bg_overline_center_out {
					&:before {
						top: 0; bottom: unset;
					}
				}
				
				&.fx_bg_bothline_center_out {
					&:before {
						background: linear-gradient(to bottom, var(--backColor2) 0, var(--backColor2) 14.99%, transparent 15%, transparent 84.99%, var(--backColor2) 85%);
						top: 0; bottom: 0; height: 100%;
					}
				}
				
				
				
				// shadows and glows ---------------------------------------------------------------------------------------------------
				
				&.fx_sh_shadow {
					&.highlight, &:hover {
						box-shadow: 0 10px 10px -10px var(--shadowColor, rgba(0,0,0, 0.5));
					}
				}
				
				&.fx_sh_inset {
					&.highlight, &:hover {
						&:before,
						&:after {
							box-shadow: inset 0 0 7px 3px var(--shadowColor, rgba(0,0,0, 0.5)), 0 0 1px transparent;
						}
					}
				}
				
				&.fx_sh_glow {
					&.highlight, &:hover {
						box-shadow: 0 0 8px var(--shadowColor, rgba(0,0,0, 0.5));
					}
				}
				
				&.fx_sh_box_inset {
					&.highlight, &:hover {
						&:after {
							box-shadow: inset 2px 2px 2px var(--shadowColor, rgba(0,0,0, 0.5)), 0 0 1px transparent;
						}
					}
				}
				
				&.fx_sh_box_outset {
					&.highlight, &:hover {
						box-shadow: 2px 2px 2px var(--shadowColor, rgba(0,0,0, 0.5));
					}
				}
				
			}
			
		}
	}
}

